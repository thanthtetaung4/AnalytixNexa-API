name: Build and deploy Python app to Azure Web App - analytixnexa

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.12"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: 'Store env values'
        run: |
          echo "${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}" > .env
          echo "${{ secrets.CLIENT_EMAIL}}" > .env
          echo "${{ secrets.CLIENT_ID }}" > .env
          echo "${{ secrets.CLIENT_PROVIDER_X509_CERT_URL }}" > .env
          echo "${{ secrets.PRIVATE_KEY }}" > .env
          echo "${{ secrets.PRIVATE_KEY_ID }}" > .env
        env: |
          AUTH_PROVIDER_X509_CERT_URL="${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}"
          CLIENT_EMAIL="${{ secrets.CLIENT_EMAIL}}"
          CLIENT_ID="${{ secrets.CLIENT_ID }}"
          CLIENT_PROVIDER_X509_CERT_URL="${{ secrets.CLIENT_PROVIDER_X509_CERT_URL }}"
          PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}"
          PRIVATE_KEY_ID="${{ secrets.PRIVATE_KEY_ID }}"
          

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
